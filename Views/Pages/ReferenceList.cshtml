@using MrCMS.Helpers
@using MrCMS.Paging
@using MrCMS.Web.Apps.References.Entities
@using MrCMS.Web.Apps.References.Pages
@model ReferenceList
<h1 class="margin-top-0">@Editable(Model, p => p.Name, false)</h1>
@Editable(Model, p => p.BodyContent, true)
@{
    var pagedList = ViewData["paged-references"] as IPagedList<Reference>;
    var searchModel = ViewData["reference-search-model"] as MrCMS.Web.Apps.References.Models.ReferenceSearchModel;
}

<form class="cogen-navbar-form" role="search" method="GET" action="/@Model.LiveUrlSegment">
    <div class="row">
        <div class="col-sm-10">
            <div class="form-group">
                <label for="s">Buscar</label>
                <input class="form-control" id="s" name="s" type="text" value="@searchModel.SearchText">

            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label class="hidden-xs">&nbsp;</label>
                <button type="submit" class="btn btn-primary form-control">Busca</button>
            </div>
        </div>
    </div>
</form>

@if (pagedList != null && !pagedList.Any())
{
    if (string.IsNullOrEmpty(searchModel.SearchText))
    {
        <div class="alert alert-info">@Resource("No references available")</div>
    }
    else
    {
        <div class="alert alert-info">@Resource("No references available with term") "@searchModel.SearchText".</div>
        <p><a href="/@Model.LiveUrlSegment">@Resource("Show all")</a></p>
    }
}

@if (pagedList != null && pagedList.Any())
{
    if (!string.IsNullOrEmpty(searchModel.SearchText))
    {
        <p>Há @pagedList.TotalItemCount itens encontrados com o termo "@searchModel.SearchText"</p>
    }
    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th>
                    @Resource("Reference - Date", "Date")
                </th>
                <th>
                    @Resource("Reference - Title", "Title")
                </th>
                <th>
                    @Resource("Reference - Subject", "Subject")
                </th>
                <th>@Resource("View")</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var page in pagedList)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(m => page.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(m => page.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(m => page.Subject)
                    </td>
                    <td>
                        <a href="@page.UrlPath" target="_blank"><i class="glyphicon glyphicon-search"></i></a>
                    </td>
                </tr>
            }

        </tbody>
    </table>


}
@if (Model.AllowPaging)
{
    @Html.PageCurrentPage(pagedList, i => new { Page = i }, PagedListRenderOptions.PageNumbersOnly)
}
